<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HidDisplay.XenoPlugins</name>
    </assembly>
    <members>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput">
            <summary>
            Mouse movement translator for single axis value.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.#ctor(System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.EventSourceId">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.Id">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.IsEmpty">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.Name">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.RangeInfo">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.Value">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.ValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.ValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.ValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.ValueSingle">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64AxisInput.ToString">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants">
            <summary>
            Constants for Nintendo64 controller.
            </summary>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_A_Id">
             <summary>
             HidDisplay button A.
             </summary>
             <remarks>
             Source protocol bit: 0.
            
             I don't want to assign this id 0, so I'm using
             the first non-bit in the console communication protocol.
             Id: 32.
             </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_B_Id">
            <summary>
            HidDisplay button B.
            </summary>
            <remarks>
            Source protocol bit: 1.
            Id: 1.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_Z_Id">
            <summary>
            HidDisplay button Z.
            </summary>
            <remarks>
            Source protocol bit: 2.
            Id: 2.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_Start_Id">
            <summary>
            HidDisplay start button.
            </summary>
            <remarks>
            Source protocol bit: 3.
            Id: 3.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_C_Up_Id">
            <summary>
            HidDisplay C up button.
            </summary>
            <remarks>
            Source protocol bit: 4.
            Id: 4.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_C_Down_Id">
            <summary>
            HidDisplay C down button.
            </summary>
            <remarks>
            Source protocol bit: 5.
            Id: 5.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_C_Left_Id">
            <summary>
            HidDisplay C left button.
            </summary>
            <remarks>
            Source protocol bit: 6.
            Id: 6.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_C_Right_Id">
            <summary>
            HidDisplay C right button.
            </summary>
            <remarks>
            Source protocol bit: 7.
            Id: 7.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_L_Shoulder_Id">
            <summary>
            HidDisplay shoulder L.
            </summary>
            <remarks>
            Source protocol bit: 10.
            Id: 10.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_R_Shoulder_Id">
            <summary>
            HidDisplay shoulder R.
            </summary>
            <remarks>
            Source protocol bit: 11.
            Id: 11.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_D_Up_Id">
            <summary>
            HidDisplay D pad up.
            </summary>
            <remarks>
            Source protocol bit: 12.
            Id: 12.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_D_Down_Id">
            <summary>
            HidDisplay D pad down.
            </summary>
            <remarks>
            Source protocol bit: 13.
            Id: 13.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_D_Left_Id">
            <summary>
            HidDisplay D pad left.
            </summary>
            <remarks>
            Source protocol bit: 14.
            Id: 14.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64Constants.Button_D_Right_Id">
            <summary>
            HidDisplay D pad right.
            </summary>
            <remarks>
            Source protocol bit: 15.
            Id: 15.
            </remarks>
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState">
            <summary>
            Nintendo 64 controller.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.ControllerPort">
            <summary>
            Gets or sets controller port.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.A">
            <summary>
            Gets or sets a value indicating whether button A is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.B">
            <summary>
            Gets or sets a value indicating whether button B is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.Z">
            <summary>
            Gets or sets a value indicating whether button Z is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.Start">
            <summary>
            Gets or sets a value indicating whether start button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.C_Up">
            <summary>
            Gets or sets a value indicating whether C up button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.C_Down">
            <summary>
            Gets or sets a value indicating whether C down button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.C_Left">
            <summary>
            Gets or sets a value indicating whether C left button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.C_Right">
            <summary>
            Gets or sets a value indicating whether C right button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.D_Up">
            <summary>
            Gets or sets a value indicating whether D pad up is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.D_Down">
            <summary>
            Gets or sets a value indicating whether D pad down is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.D_Left">
            <summary>
            Gets or sets a value indicating whether D pad left is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.D_Right">
            <summary>
            Gets or sets a value indicating whether D pad right is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.L_Shoulder">
            <summary>
            Gets or sets a value indicating whether shoulder L is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.R_Shoulder">
            <summary>
            Gets or sets a value indicating whether shoulder R is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.AnalogX">
            <summary>
            Gets or sets analog stick X value (actual one signed byte).
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState.AnalogY">
            <summary>
            Gets or sets analog stick Y value (actual one signed byte).
            </summary>
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput">
            <summary>
            Nintendo64 analog stick movement.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.#ctor(System.Int16,System.Int16)">
            <summary>
            Initializes a new instance of the <see cref="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput"/> class.
            </summary>
            <param name="x">X value.</param>
            <param name="y">Y value.</param>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.Empty">
            <summary>
            Gets the generic null movement.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.EventSourceId">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.Id">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.IsEmpty">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.Name">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.Value1">
            <summary>
            Gets mouse X value.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.Value2">
            <summary>
            Gets mouse Y value.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeableInput.ToString">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo">
            <summary>
            Minimal implementation to describe movement value.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.Instance">
            <summary>
            Gets the static instance.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.Name">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MinValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MaxValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MinValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MaxValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MinValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MaxValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MinValueSingle">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.MaxValueSingle">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.BaseType">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64RangeInfo.ToString">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants">
            <summary>
            Constants for Nintendo64 controller.
            </summary>
            <remarks>
            Based on https://gamefaqs.gamespot.com/snes/916396-super-nintendo/faqs/5395 .
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_B_Id">
            <summary>
            HidDisplay button B.
            </summary>
            <remarks>
            Source clock 1.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_Y_Id">
            <summary>
            HidDisplay button Y.
            </summary>
            <remarks>
            Source clock 2.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_Select_Id">
            <summary>
            HidDisplay button Select.
            </summary>
            <remarks>
            Source clock 3.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_Start_Id">
            <summary>
            HidDisplay start Start.
            </summary>
            <remarks>
            Source clock 4.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_D_Up_Id">
            <summary>
            HidDisplay D pad up.
            </summary>
            <remarks>
            Source clock 5.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_D_Down_Id">
            <summary>
            HidDisplay D pad down.
            </summary>
            <remarks>
            Source clock 6 .
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_D_Left_Id">
            <summary>
            HidDisplay D pad left.
            </summary>
            <remarks>
            Source clock 7.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_D_Right_Id">
            <summary>
            HidDisplay D pad right.
            </summary>
            <remarks>
            Source clock 8.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_A_Id">
            <summary>
            HidDisplay A button.
            </summary>
            <remarks>
            Source clock 9.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_X_Id">
            <summary>
            HidDisplay X button.
            </summary>
            <remarks>
            Source clock 10.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_L_Shoulder_Id">
            <summary>
            HidDisplay shoulder L.
            </summary>
            <remarks>
            Source clock 11.
            </remarks>
        </member>
        <member name="F:HidDisplay.Controller.ControllerState.Nintendo64.SnesConstants.Button_R_Shoulder_Id">
            <summary>
            HidDisplay shoulder R.
            </summary>
            <remarks>
            Source clock 12.
            </remarks>
        </member>
        <member name="T:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState">
            <summary>
            SNES controller.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.ControllerPort">
            <summary>
            Gets or sets controller port.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.A">
            <summary>
            Gets or sets a value indicating whether button A is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.B">
            <summary>
            Gets or sets a value indicating whether button B is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.X">
            <summary>
            Gets or sets a value indicating whether button X is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.Y">
            <summary>
            Gets or sets a value indicating whether button Y is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.Select">
            <summary>
            Gets or sets a value indicating whether select button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.Start">
            <summary>
            Gets or sets a value indicating whether start button is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.D_Up">
            <summary>
            Gets or sets a value indicating whether D pad up is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.D_Down">
            <summary>
            Gets or sets a value indicating whether D pad down is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.D_Left">
            <summary>
            Gets or sets a value indicating whether D pad left is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.D_Right">
            <summary>
            Gets or sets a value indicating whether D pad right is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.L_Shoulder">
            <summary>
            Gets or sets a value indicating whether shoulder L is pressed.
            </summary>
        </member>
        <member name="P:HidDisplay.Controller.ControllerState.Nintendo64.SnesControllerState.R_Shoulder">
            <summary>
            Gets or sets a value indicating whether shoulder R is pressed.
            </summary>
        </member>
        <member name="T:HidDisplay.Controller.Plugins.BuffaloSnesPlugin">
            <summary>
            Plugin to provide input from buffalo generic "classic gaming" controller.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.BuffaloSnesPlugin.InstanceDispose">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.BuffaloSnesPlugin.Setup(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.BuffaloSnesPlugin.Start">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.BuffaloSnesPlugin.Stop">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.BuffaloSnesPlugin.AcceptMessage(System.Object,BurnsBac.WindowsHardware.HardwareWatch.HidResult)">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.Plugins.DuoWatch64Plugin">
            <summary>
            Plugin to provide input from duowatch64 arduino uno device.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HidDisplay.Controller.Plugins.DuoWatch64Plugin"/> class.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.InstanceDispose">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.Setup(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.Start">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.Stop">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.DuoWatch64Plugin.InputEventMapper(System.Object,HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState)">
            <summary>
            Accepts events from the hardware watch and translates them to plugin event format.
            </summary>
            <param name="sender">Sender.</param>
            <param name="state">Event args.</param>
        </member>
        <member name="T:HidDisplay.Controller.Plugins.NintendoSpy64Plugin">
            <summary>
            Plugin to provide input from nintendospy arduino uno device.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HidDisplay.Controller.Plugins.NintendoSpy64Plugin"/> class.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.InstanceDispose">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.Setup(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.Start">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.Stop">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.NintendoSpy64Plugin.InputEventMapper(System.Object,HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState)">
            <summary>
            Accepts <see cref="T:HidDisplay.Controller.ControllerState.Nintendo64.Nintendo64ControllerState"/> and translates to <see cref="T:HidDisplay.PluginDefinition.GenericInputEventArgs"/>.
            </summary>
            <param name="sender">Sender.</param>
            <param name="state">Event args.</param>
        </member>
        <member name="T:HidDisplay.Controller.Plugins.Raphnet64Plugin">
            <summary>
            Plugin to provice input from raphnet n64 to usb device.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Plugins.Raphnet64Plugin.InstanceDispose">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.Raphnet64Plugin.Setup(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.Raphnet64Plugin.Start">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.Raphnet64Plugin.Stop">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.Controller.Plugins.Raphnet64Plugin.AcceptMessage(System.Object,BurnsBac.WindowsHardware.HardwareWatch.HidResult)">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.Readers.DuoWatch64">
            <summary>
            Listens to serial port for DuoWatch64 protocol messages and forwards state change events.
            </summary>
        </member>
        <member name="T:HidDisplay.Controller.Readers.DuoWatch64.Nintendo64ControllerStateHandler">
            <summary>
            Event delegate to accept state change events.
            </summary>
            <param name="sender">Sender.</param>
            <param name="state">Controller state data.</param>
        </member>
        <member name="E:HidDisplay.Controller.Readers.DuoWatch64.Nintendo64ControllerStateChange">
            <summary>
            Event to accept state change.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Readers.DuoWatch64.Handler(System.Object,System.Byte[])">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.Readers.NintendoSpy64">
            <summary>
            Listens to serial port for NintendoSpy protocol messages and forwards state change events.
            </summary>
            <remarks>
            https://github.com/jaburns/NintendoSpy .
            </remarks>
        </member>
        <member name="T:HidDisplay.Controller.Readers.NintendoSpy64.Nintendo64ControllerStateHandler">
            <summary>
            Event delegate to accept state change events.
            </summary>
            <param name="sender">Sender.</param>
            <param name="state">Controller state data.</param>
        </member>
        <member name="E:HidDisplay.Controller.Readers.NintendoSpy64.Nintendo64ControllerStateChange">
            <summary>
            Event to accept state change.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Readers.NintendoSpy64.Handler(System.Object,System.Byte[])">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.Controller.Readers.Utility">
            <summary>
            Helper functions.
            </summary>
        </member>
        <member name="M:HidDisplay.Controller.Readers.Utility.Reverse(System.Byte)">
            <summary>
            Reverses the bits in a byte.
            </summary>
            <param name="b">Byte to reverse.</param>
            <returns>Reversed byte.</returns>
        </member>
        <member name="M:HidDisplay.Controller.Readers.Utility.MakeSignedReverseByte(System.Byte)">
            <summary>
            Reverses the bits in a byte. If the highest bit is set, 255 is subtracted.
            </summary>
            <param name="b">Byte to reverse and convert to signed value.</param>
            <returns>Reversed signed byte.</returns>
        </member>
        <member name="M:HidDisplay.Controller.Readers.Utility.MakeSignedReverseByte(System.Byte[],System.Int32)">
            <summary>
            Treats an array of bytes as 8 bits and converts to a signed int. A non-zero
            value of the byte is treated as a 1 bit.
            </summary>
            <param name="b">Byte array to convert.</param>
            <param name="startIndex">Starting index of byte array.</param>
            <returns>Signed int.</returns>
        </member>
        <member name="T:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin">
            <summary>
            Plugin to provide input from bluetooth low energy heartrate device.
            </summary>
        </member>
        <member name="M:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin.InstanceDispose">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin.Setup(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin.Start">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin.Stop">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.XenoPlugins.Plugins.BluetoothLowEnergyHeartratePlugin.InputEventMapper(System.Object,BurnsBac.WindowsHardware.Bluetooth.Characteristics.HeartRateMeasurement)">
            <summary>
            Accepts <see cref="T:BurnsBac.WindowsHardware.Bluetooth.Characteristics.HeartRateMeasurement"/> and translates to <see cref="T:HidDisplay.PluginDefinition.GenericInputEventArgs"/>.
            </summary>
            <param name="sender">Sender.</param>
            <param name="state">Event args.</param>
        </member>
        <member name="T:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput">
            <summary>
            Generic rangeable input.
            </summary>
        </member>
        <member name="M:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput"/> class.
            </summary>
            <param name="value">Value.</param>
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.EventSourceId">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.Id">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.IsEmpty">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.Name">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.RangeInfo">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.Value">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.ValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.ValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.ValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.ValueSingle">
            <inheritdoc />
        </member>
        <member name="M:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeableInput.ToString">
            <inheritdoc />
        </member>
        <member name="T:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo">
            <summary>
            Generic int range info.
            </summary>
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.Instance">
            <summary>
            Gets the static instance.
            </summary>
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.Name">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MinValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MaxValueInt">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MinValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MaxValueDecimal">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MinValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MaxValueDouble">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MinValueSingle">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.MaxValueSingle">
            <inheritdoc />
        </member>
        <member name="P:HidDisplay.XenoPlugins.SensorRange.GenericIntRangeInfo.BaseType">
            <inheritdoc />
        </member>
    </members>
</doc>
